;
; Append and length function tests. car, cdr, and equal? tests with lists.
;

(define (append list1 list2)
    (if (null? list1)
        list2
        (cons (car list1) (append (cdr list1) list2))))

(define (length list1)
    (if (null? list1)
        0
        (+ 1 (length (cdr list1)))))

(append '(1 2 3) '(4 5 6))
(equal? (list 1 2 3 4 5 6) (append '(1 2 3) '(4 5 6)))
(length (append '(1 2 3) '(4 5 6)))
(length (list 1 2 3 4 5 6))
(car (cdr (append '(1 2 3) '(4 5 6))))
(cdr (cdr (append '(1 2 3) '(4 5 6))))
(car (cdr (cdr (cdr (append '(1 2 3) '(4 5 6))))))
(equal? '(1 2 3) '(1 2 3))
(define l1 '(1 2 3 4))
(define l2 '(1 2 3 4))
(define l3 '(1 2 3))
(define l4 (cons (cons 1 2) (cons 3 4)))
(define x 2.5)
(define y 2.5)
(define z 2.5)
(equal? l1 l2)
(equal? l1 l3)
(equal? l1 l4)
(define l4 (cons (cons 1 2) (cons 3 4)))
(equal? (cons (cons 1 2) (cons 3 4)) l4)
(equal? x y)
(equal? y z)
(eq? x y)
(eq? l1 l2)
