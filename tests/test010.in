;
; List implementation test. Calculates length of list with recursion.
;

(define (length l)
	(cond [(null? l) 0]
		  [else (+ 1 (length (cdr l)))]
	)
)

(length '(1 2 3 4 5))

(define (create-list l)
    (cond ((null? l) '())
          (else (cons (car l) (create-list cdr l)))))

(define (c l)
    (cons (car l) (cdr (cdr l))))
(create-list '(1 2 3 4 5))