;;; 1.1.7

(define square (λ (x) (* x x)))
(define abs (λ (x) (if (<= x 0) (* x -1) x)))

(define (sqrt-iter guess x)
  (if (good-enough? guess x)
      guess
      (sqrt-iter (improve guess x)
                 x)))
(define (improve guess x)
  (average guess (/ x guess)))
(define (average x y)
  (/ (+ x y) 2))
(define (good-enough? guess x)
  (< (abs (- (square guess) x)) 0.001))
(define (my-sqrt x)
  (sqrt-iter 1.0 x))
(my-sqrt 9)
; expect 3.00009155413138

(my-sqrt (+ 100 37))
; expect 11.704699917758145

(my-sqrt (+ (my-sqrt 2) (my-sqrt 3)))
; expect 1.7739279023207892

(square (my-sqrt 1000))
; expect 1000.000369924366
