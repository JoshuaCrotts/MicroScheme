;
; "OOP" 1
;
(define (point x y)
    (list
        (list 'rect
            (lambda () (list x y)))
        (list 'polar
            (lambda ()
                (list
                    (sqrt (+ (* x x) (* y y)))
                    (atan (/ x y)))))))

(define (structure key p)
    (cond ((eq? key 'rect) (car (cdr (car p))))
          ((eq? key 'polar) (car (cdr (car (cdr p)))))
          (else #f)))

(define p (point 1 1))
((structure 'rect p))
((structure 'polar p))
